name: CI & Release

on:
  push:
  pull_request:
    branches:
      - alpha
      - beta
      - next
      - main

permissions:
  contents: read # for checkout

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    name: Node.js ${{ matrix.node-version }} / ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        # node-version: [lts/*, current]
        node-version: [lts/*]
        include:
          - platform: macos-latest
            node-version: lts/*
    env:
      CYPRESS_CACHE_FOLDER: '~/.cache/Cypress'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: corepack enable && pnpm --version
      - run: pnpm install
      - run: pnpm ts:check
      - run: pnpm build
      - run: pnpm lint
      - run: pnpm test
      - run: pnpm test:browser

      - name: Upload Cypress Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress
          path: |
            cypress/screenshots
            cypress/videos

  release:
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    name: 'Release please'
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
        id: generate-token
        with:
          app_id: ${{ secrets.ECOSPARK_APP_ID }}
          private_key: ${{ secrets.ECOSPARK_APP_PRIVATE_KEY }}
      # This action will create a release PR when regular conventional commits are pushed to gamma, it'll also detect if a release PR is merged and npm publish should happen
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: node
          target-branch: ${{ github.ref_name }}
          token: ${{ steps.generate-token.outputs.token }}

      # # Publish to NPM on new releases
      # - uses: actions/checkout@v4
      #   if: ${{ steps.release.outputs.releases_created }}
      # - uses: pnpm/action-setup@v2
      #   if: ${{ steps.release.outputs.releases_created }}
      # - uses: actions/setup-node@v3
      #   if: ${{ steps.release.outputs.releases_created }}
      #   with:
      #     cache: pnpm
      #     node-version: lts/*
      # - name: install deps & build
      #   run: corepack enable && pnpm --version && pnpm install --ignore-scripts
      #   if: ${{ steps.release.outputs.releases_created }}
      # - name: Set publishing config
      #   run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
      #   if: ${{ steps.release.outputs.releases_created }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
      # # Release Please has already incremented versions and published tags, so we just
      # # need to publish all unpublished versions to NPM here
      # - run: pnpm -r publish
      #   if: ${{ steps.release.outputs.releases_created }}
